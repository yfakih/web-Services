
package stub;

import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.2
 * Generated source version: 3.0
 * 
 */
@WebService(name = "BancService", targetNamespace = "http://server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BancService {


    /**
     * 
     * @return
     *     returns java.util.List<stub.Account>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listAccounts", targetNamespace = "http://server/", className = "stub.ListAccounts")
    @ResponseWrapper(localName = "listAccountsResponse", targetNamespace = "http://server/", className = "stub.ListAccountsResponse")
    @Action(input = "http://server/BancService/listAccountsRequest", output = "http://server/BancService/listAccountsResponse")
    public List<Account> listAccounts();

    /**
     * 
     * @param nom
     * @param num
     * @return
     *     returns stub.Account
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "newAccount", targetNamespace = "http://server/", className = "stub.NewAccount")
    @ResponseWrapper(localName = "newAccountResponse", targetNamespace = "http://server/", className = "stub.NewAccountResponse")
    @Action(input = "http://server/BancService/newAccountRequest", output = "http://server/BancService/newAccountResponse")
    public Account newAccount(
        @WebParam(name = "Num", targetNamespace = "")
        int num,
        @WebParam(name = "Nom", targetNamespace = "")
        String nom);

    /**
     * 
     * @param montant
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "convertToMAD", targetNamespace = "http://server/", className = "stub.ConvertToMAD")
    @ResponseWrapper(localName = "convertToMADResponse", targetNamespace = "http://server/", className = "stub.ConvertToMADResponse")
    @Action(input = "http://server/BancService/convertToMADRequest", output = "http://server/BancService/convertToMADResponse")
    public double convertToMAD(
        @WebParam(name = "montant", targetNamespace = "")
        double montant);

}
